package main

import (
	"log"
	"net/http"

	"github.com/neotylor/go-lang-learning/tree/master/10-projects/web-api/go_task_manager_api/database"
	"github.com/neotylor/go-lang-learning/tree/master/10-projects/web-api/go_task_manager_api/middleware"
	"github.com/neotylor/go-lang-learning/tree/master/10-projects/web-api/go_task_manager_api/models"
	"github.com/neotylor/go-lang-learning/tree/master/10-projects/web-api/go_task_manager_api/routes"

	_ "github.com/neotylor/go-lang-learning/tree/master/10-projects/web-api/go_task_manager_api/docs" // docs generated by swag

	"github.com/gorilla/mux"
	httpSwagger "github.com/swaggo/http-swagger"
)

// @title           Go Task Manager API
// @version         1.0
// @description     This is a task management API server.
// @host            localhost:8080
// @BasePath        /

// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization

func main() {
	database.Connect() // Step 2: Connect to MySQL database
	// One-liner for all DB models
	models.InitModels() // âœ… single call to migrate all models

	r := mux.NewRouter()
	// One-liner for all routes
	routes.InitRoutes(r) // Register everything from one place

	r.PathPrefix("/swagger/").Handler(httpSwagger.WrapHandler)

	log.Println("Server starting at http://localhost:8080")
	wrappedRouter := middleware.WrapWithMiddlewares(r)
	http.ListenAndServe(":8080", wrappedRouter)

	// http.ListenAndServe(":8080", r)

}
